{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Formulario","guardarBusqueda","useContext","obtenerDatosReceta","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","strCategory","ModalContext","ModalProvider","idreceta","guardarIdReceta","informacion","guardarReceta","obtenerReceta","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a5c2cd5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (  \r\n        <header className=\"bg-alert\">\r\n            <h1>Busca Recetas de Bebidas</h1>\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default Header;","import axios from 'axios';\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Crear el Context\r\nexport const CategoriasContext = createContext();\r\n\r\n//Provider donde se encuentra las funciones del state\r\n\r\nconst CategoriasProvider= (props) => {\r\n \r\n    // crear el state del context\r\n    const [categorias, guardarCategorias] = useState([]);\r\n\r\n    // ejecutar el llamado a la api\r\n    useEffect(() => {\r\n        const obtenerCategorias = async () => {\r\n           const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\r\n\r\n           const categorias = await axios.get(url)\r\n\r\n           guardarCategorias(categorias.data.drinks);\r\n        }\r\n        obtenerCategorias();\r\n    }, []);\r\n\r\n  return (\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n\r\n}\r\nexport default  CategoriasProvider;\r\n\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n\r\nconst [recetas, guardarRecetas] = useState([]);\r\nconst [busqueda, buscarRecetas] = useState({\r\n            nombre: '',\r\n            categoria: ''\r\n})\r\nconst [ consultar, guardarConsultar] = useState(false);\r\n\r\nconst { nombre, categoria } = busqueda;\r\n\r\nuseEffect(() => {\r\n    if(consultar) {\r\n        const obtenerRecetas = async () => {\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}\r\n            &c=${categoria}`;\r\n\r\n            const resultado = await axios.get(url);\r\n\r\n            //console.log(resultado.data.drinks);\r\n            guardarRecetas(resultado.data.drinks);\r\n        }\r\n\r\n        obtenerRecetas();\r\n    }\r\n\r\n}, [busqueda]);\r\n    \r\n    return ( \r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                guardarConsultar\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n    );\r\n}\r\n\r\nexport default RecetasProvider;","import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {  CategoriasContext }from '../context/CategoriasContext';  \r\nimport {  RecetasContext }from '../context/RecetasContext';  \r\n\r\nconst Formulario = () => {\r\n\r\n    const [ busqueda, guardarBusqueda ] =useState ({\r\n        nombre: '',\r\n        categorias: ''\r\n    })\r\n\r\n    const { categorias } = useContext(CategoriasContext);\r\n    const { buscarRecetas, guardarConsultar } = useContext(RecetasContext);\r\n\r\n   // funcion para leer los contenidos\r\n   const obtenerDatosReceta = e => {\r\n       guardarBusqueda({\r\n           ...busqueda,\r\n           [e.target.name] :e.target.value\r\n       })\r\n   }\r\n    \r\n   \r\n   return ( \r\n        <form\r\n            className=\"col-12\"\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n                buscarRecetas(busqueda);\r\n                guardarConsultar(true);\r\n            }}\r\n        >\r\n            <fieldset className=\"text-center\">\r\n                <legend>Busca bebidas por Categoria o Ingrediente</legend>\r\n            </fieldset>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    <input \r\n                        name=\"nombre\"\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"Buscar por Ingrediente\"\r\n                        onChange={obtenerDatosReceta}\r\n                    />\r\n                </div>\r\n                 <div className=\"col-md-4\">\r\n                     <select\r\n                      className=\"form-control\"\r\n                      name=\"categoria\"\r\n                      onChange={obtenerDatosReceta}\r\n                     >\r\n                        <option value=\"\">--Selecciona categoria--</option>\r\n                        {categorias.map(categoria => (\r\n                            <option\r\n                            key={categoria.strCategory}  \r\n                            key={categoria.strCategory}\r\n                        >{categoria.strCategory}</option>\r\n\r\n                        ))}\r\n                     </select>\r\n                </div>\r\n\r\n                <div className=\"col-md-4\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        value=\"Buscar Bebidas\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React, { createContext, useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n// crear el context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n\r\n    // state del provider\r\n    const [ idreceta, guardarIdReceta ] = useState(null);\r\n    const [ informacion, guardarReceta] = useState({});\r\n\r\n    // una vez que tenemos una receta, llamar la api\r\n    useEffect( () => {\r\n        const obtenerReceta = async () => {\r\n            if(!idreceta) return;\r\n\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n\r\n            const resultado = await axios.get(url);\r\n\r\n            guardarReceta(resultado.data.drinks[0]);\r\n        }\r\n        obtenerReceta();\r\n    }, [idreceta]);\r\n\r\n    return ( \r\n        <ModalContext.Provider\r\n            value={{\r\n                informacion,\r\n                guardarIdReceta,\r\n                guardarReceta\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ModalProvider;","import React, { useContext, useState } from 'react';\r\nimport { ModalContext } from '../context/ModalContext';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 450,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Receta = ({receta}) => {\r\n\r\n    // Configuración del modal de material-ui\r\n    const [ modalStyle ] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    // extraer los valores del context\r\n    const { informacion, guardarIdReceta, guardarReceta } = useContext(ModalContext);\r\n\r\n    // Muestra y formatea los ingredientes\r\n    const mostrarIngredientes = informacion => {\r\n        let ingredientes = [];\r\n        for(let i = 1; i < 16; i++){\r\n            if( informacion[`strIngredient${i}`] ) {\r\n                ingredientes.push(\r\n                    <li> { informacion[`strIngredient${i}`] }  { informacion[`strMeasure${i}`] }</li>\r\n                )\r\n            }\r\n        }\r\n\r\n        return ingredientes;\r\n    }\r\n\r\n    return ( \r\n        <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n                 <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n\r\n                 <img className=\"card-img-top\" src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`} />\r\n\r\n                 <div className=\"card-body\">\r\n                     <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={() => {\r\n                            guardarIdReceta(receta.idDrink);\r\n                            handleOpen();\r\n                        }}\r\n                     >\r\n                         Ver Receta\r\n                     </button>\r\n\r\n\r\n                     <Modal\r\n                        open={open}\r\n                        onClose={() => {\r\n                            guardarIdReceta(null);\r\n                            guardarReceta({})\r\n                            handleClose();\r\n                        }}\r\n                     >\r\n                         <div style={modalStyle} className={classes.paper}>\r\n                            <h2>{informacion.strDrink}</h2>\r\n                            <h3 className=\"mt-4\">Instrucciones</h3>\r\n                            <p>\r\n                                {informacion.strInstructions}\r\n                            </p>\r\n\r\n                            <img className=\"img-fluid my-4\" src={informacion.strDrinkThumb} />\r\n\r\n                            <h3>Ingredientes y cantidades</h3>\r\n                            <ul>\r\n                                { mostrarIngredientes(informacion) }\r\n                            </ul>\r\n                         </div>\r\n                     </Modal>\r\n                 </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Receta;","import React, { useContext } from 'react';\r\nimport Receta from './Receta';\r\nimport { RecetasContext } from '../context/RecetasContext'\r\n\r\nconst ListaRecetas = () => {\r\n\r\n    // extraer las recetas\r\n    const { recetas } = useContext(RecetasContext);\r\n\r\n    return ( \r\n        <div className=\"row mt-5\">\r\n            {recetas.map(receta => (\r\n                <Receta \r\n                    key={receta.idDrink}\r\n                    receta={receta}\r\n                />\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ListaRecetas;","import React, { Fragment } from 'react';\nimport Header from './components/Header'\nimport Formulario from './components/Formulario'\nimport ListaRecetas from './components/ListaRecetas'\n\nimport CategoriasProvider from './context/CategoriasContext';\nimport RecetasProvider from './context/RecetasContext';\nimport ModalProvider from './context/ModalContext';\n\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n        <Header />\n\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n              <Formulario />\n          </div>\n          <ListaRecetas />\n        </div>\n\n        </ModalProvider>\n        </RecetasProvider>\n      </CategoriasProvider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './boostrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}